// Central reference for all tables/columns used in leaderboards
// Extend this file as you add more tables/stat sources

export interface LeaderboardTable {
  table: string;
  description: string;
  keyColumn: string;
  columns: Array<{
    name: string;
    type: string;
    description: string;
  }>;
  foreignKeys?: Array<{
    column: string;
    references: string;
    onDelete?: string;
  }>;
}

// Data processing/transformation notes:
// - Always use user_profile.id for joins/calculations; display name only in results (names may not be unique).
// - Extract Strength, Constitution, Dexterity, Intelligence from template_xml using a TextBetween-like function.
//   Example: TextBetween(template_xml, 'Strength="', '"')
// - Convert play_time from seconds to minutes for display (divide by 60).
//

// - In the prisoner table, gender is stored as 1 (Female) and 2 (Male); convert to string for display.
//
// Implement these transformations in the analysis/data extraction code.

export const leaderboardTables: LeaderboardTable[] = [
  {
    table: 'user_profile',
    description: 'Main user profile table. Links to survival_stats via id = user_profile_id.',
    keyColumn: 'id',
    columns: [
      { name: 'id', type: 'INTEGER', description: 'Primary key' },
      { name: 'user_id', type: 'TEXT', description: 'User ID (foreign key)' },
      { name: 'template_xml', type: 'TEXT', description: 'Template XML' },
      { name: 'name', type: 'TEXT', description: 'Player name' },
      { name: 'type', type: 'INTEGER', description: 'Type' },
      { name: 'authority_name', type: 'TEXT', description: 'Authority name' },
      { name: 'authority_ip', type: 'TEXT', description: 'Authority IP' },
      { name: 'authority_response_port', type: 'INTEGER', description: 'Authority response port' },
      { name: 'authority_gameplay_port', type: 'INTEGER', description: 'Authority gameplay port' },
      { name: 'authority_user_profile_id', type: 'INTEGER', description: 'Authority user profile ID' },
      { name: 'authority_auth_token', type: 'TEXT', description: 'Authority auth token' },
      { name: 'last_login_time', type: 'TEXT', description: 'Last login time' },
      { name: 'prisoner_id', type: 'INTEGER', description: 'Prisoner ID (foreign key)' },
      { name: 'fame_points', type: 'REAL', description: 'Current fame points' },
      { name: 'fake_name', type: 'TEXT', description: 'Fake name' },
      { name: 'last_logout_time', type: 'TEXT', description: 'Last logout time' },
      { name: 'money_balance', type: 'INTEGER', description: 'Money balance' },
      { name: 'global_spam_protection_state', type: 'BLOB', description: 'Global spam protection state' },
      { name: 'local_spam_protection_state', type: 'BLOB', description: 'Local spam protection state' },
      { name: 'last_name_change', type: 'TEXT', description: 'Last name change' },
      { name: 'favorite_crafting_recipes', type: 'BLOB', description: 'Favorite crafting recipes' },
      { name: 'deluxe_version', type: 'BLOB', description: 'Deluxe version' },
      { name: 'play_time', type: 'INTEGER', description: 'Total play time (seconds)' },
      { name: 'has_used_new_player_protection', type: 'BOOLEAN', description: 'Has used new player protection' },
      { name: 'creation_time', type: 'TEXT', description: 'Creation time' },
    ],
    foreignKeys: [
      { column: 'user_id', references: 'user(id)', onDelete: 'CASCADE' },
      { column: 'prisoner_id', references: 'prisoner(id)', onDelete: 'SET NULL' },
    ],
  },
  {
    table: 'prisoner',
    description: 'Prisoner character table. Linked to user_profile via user_profile_id. Used for character stats and appearance.',
    keyColumn: 'id',
    columns: [
      { name: 'id', type: 'INTEGER', description: 'Primary key' },
      { name: 'user_profile_id', type: 'INTEGER', description: 'Foreign key to user_profile(id)' },
      { name: 'is_alive', type: 'INTEGER', description: 'Is alive (boolean as integer)' },
      { name: 'time_of_death', type: 'TEXT', description: 'Time of death' },
      { name: 'team_index', type: 'INTEGER', description: 'Team index' },
      { name: 'appearance_index', type: 'INTEGER', description: 'Appearance index' },
      { name: 'gender', type: 'INTEGER', description: 'Gender' },
      { name: 'head_tattoo_index', type: 'INTEGER', description: 'Head tattoo index' },
      { name: 'body_tattoo_index', type: 'INTEGER', description: 'Body tattoo index' },
      { name: 'stance', type: 'INTEGER', description: 'Stance' },
      { name: 'melee_target_selection_mode', type: 'INTEGER', description: 'Melee target selection mode' },
      { name: 'head_water_weight', type: 'REAL', description: 'Head water weight' },
      { name: 'upper_body_water_weight', type: 'REAL', description: 'Upper body water weight' },
      { name: 'lower_body_water_weight', type: 'REAL', description: 'Lower body water weight' },
      { name: 'feet_water_weight', type: 'REAL', description: 'Feet water weight' },
      { name: 'penis_size', type: 'REAL', description: 'Penis size' },
      { name: 'breast_size', type: 'INTEGER', description: 'Breast size' },
      { name: 'time_of_revive', type: 'TEXT', description: 'Time of revive' },
      { name: 'body_simulation', type: 'BLOB', description: 'Body simulation' },
      { name: 'should_play_intro_cinematic', type: 'BOOLEAN', description: 'Should play intro cinematic' },
      { name: 'has_open_parachute', type: 'BOOLEAN', description: 'Has open parachute' },
      { name: 'eligible_for_free_plastic_surgery', type: 'BOOLEAN', description: 'Eligible for free plastic surgery' },
      { name: 'last_character_dlcs_owned', type: 'BOOLEAN', description: 'Last character DLCs owned' },
      { name: 'age', type: 'TINYINT', description: 'Age' },
      { name: 'appearance_hair_style_index', type: 'TINYINT', description: 'Hair style index' },
      { name: 'appearance_face_type_index', type: 'TINYINT', description: 'Face type index' },
      { name: 'appearance_skin_tone_index', type: 'TINYINT', description: 'Skin tone index' },
      { name: 'appearance_hair_color_index', type: 'TINYINT', description: 'Hair color index' },
      { name: 'appearance_eye_color_index', type: 'TINYINT', description: 'Eye color index' },
      { name: 'appearance_iris_type_index', type: 'TINYINT', description: 'Iris type index' },
      { name: 'appearance_eye_makeup_metalness', type: 'TINYINT', description: 'Eye makeup metalness' },
      { name: 'appearance_eye_makeup_intensity', type: 'TINYINT', description: 'Eye makeup intensity' },
      { name: 'appearance_lipstick_roughness', type: 'TINYINT', description: 'Lipstick roughness' },
      { name: 'appearance_lipstick_intensity', type: 'TINYINT', description: 'Lipstick intensity' },
      { name: 'appearance_eyeshadow_color_r', type: 'TINYINT', description: 'Eyeshadow color R' },
      { name: 'appearance_eyeshadow_color_g', type: 'TINYINT', description: 'Eyeshadow color G' },
      { name: 'appearance_eyeshadow_color_b', type: 'TINYINT', description: 'Eyeshadow color B' },
      { name: 'appearance_eyeliner_color_r', type: 'TINYINT', description: 'Eyeliner color R' },
      { name: 'appearance_eyeliner_color_g', type: 'TINYINT', description: 'Eyeliner color G' },
      { name: 'appearance_eyeliner_color_b', type: 'TINYINT', description: 'Eyeliner color B' },
      { name: 'appearance_lipstick_color_r', type: 'TINYINT', description: 'Lipstick color R' },
      { name: 'appearance_lipstick_color_g', type: 'TINYINT', description: 'Lipstick color G' },
      { name: 'appearance_lipstick_color_b', type: 'TINYINT', description: 'Lipstick color B' },
      { name: 'awarded_character_dlc_plastic_surgeries', type: 'BOOLEAN', description: 'Awarded character DLC plastic surgeries' },
      { name: 'should_spawn_default_equipment', type: 'INTEGER', description: 'Should spawn default equipment' },
      { name: 'last_save_time', type: 'INTEGER', description: 'Last save time' },
      { name: 'is_in_bed', type: 'BOOLEAN', description: 'Is in bed' },
      { name: 'appearance_moustache_style_index', type: 'INTEGER', description: 'Moustache style index' },
      { name: 'appearance_beard_style_index', type: 'INTEGER', description: 'Beard style index' },
      { name: 'appearance_facial_hair_color_index', type: 'INTEGER', description: 'Facial hair color index' },
      { name: 'appearance_has_body_hair', type: 'BOOLEAN', description: 'Has body hair' },
    ],
    foreignKeys: [
      { column: 'user_profile_id', references: 'user_profile(id)', onDelete: 'CASCADE' },
    ],
  },
  {
    table: 'prisoner_skill',
    description: 'Skills for each prisoner character. Linked to prisoner via prisoner_id.',
    keyColumn: 'prisoner_id',
    columns: [
      { name: 'prisoner_id', type: 'INTEGER', description: 'Foreign key to prisoner(id)' },
      { name: 'name', type: 'TEXT', description: 'Skill name' },
      { name: 'level', type: 'INTEGER', description: 'Skill level' },
      { name: 'experience', type: 'REAL', description: 'Skill experience' },
      { name: 'xml', type: 'TEXT', description: 'Skill XML' },
    ],
    foreignKeys: [
      { column: 'prisoner_id', references: 'prisoner(id)', onDelete: 'CASCADE' },
    ],
  },
  {
    table: 'survival_stats',
    description: 'Player survival and performance stats. Linked to user_profile via user_profile_id.',
    keyColumn: 'user_profile_id',
    columns: [
      { name: 'user_profile_id', type: 'INTEGER', description: 'Foreign key to user_profile(id)' },
      { name: 'highest_positive_fame_points', type: 'REAL', description: 'Highest positive fame points' },
      { name: 'doors_claimed', type: 'INTEGER', description: 'Doors claimed' },
      { name: 'animals_killed', type: 'INTEGER', description: 'Animals killed' },
      { name: 'minutes_survived', type: 'REAL', description: 'Minutes survived' },
      { name: 'kills', type: 'INTEGER', description: 'Player kills' },
      { name: 'deaths', type: 'INTEGER', description: 'Player deaths' },
      { name: 'locks_picked', type: 'INTEGER', description: 'Locks picked' },
      { name: 'puppets_killed', type: 'INTEGER', description: 'Puppets killed' },
      { name: 'guns_crafted', type: 'INTEGER', description: 'Guns crafted' },
      { name: 'bullets_crafted', type: 'INTEGER', description: 'Bullets crafted' },
      { name: 'arrows_crafted', type: 'INTEGER', description: 'Arrows crafted' },
      { name: 'clothing_crafted', type: 'INTEGER', description: 'Clothing crafted' },
      { name: 'longest_kill_distance', type: 'REAL', description: 'Longest kill distance' },
      { name: 'melee_kills', type: 'INTEGER', description: 'Melee kills' },
      { name: 'archery_kills', type: 'INTEGER', description: 'Archery kills' },
      { name: 'players_knocked_out', type: 'INTEGER', description: 'Players knocked out' },
      { name: 'total_defecations', type: 'INTEGER', description: 'Total defecations' },
      { name: 'total_urinations', type: 'INTEGER', description: 'Total urinations' },
      { name: 'lights_fired', type: 'INTEGER', description: 'Lights fired' },
      { name: 'containers_looted', type: 'INTEGER', description: 'Containers looted' },
      { name: 'items_put_into_containers', type: 'INTEGER', description: 'Items put into containers' },
      { name: 'deaths_by_prisoners', type: 'INTEGER', description: 'Deaths by prisoners' },
      { name: 'animals_skinned', type: 'INTEGER', description: 'Animals skinned' },
      { name: 'food_eaten', type: 'REAL', description: 'Food eaten' },
      { name: 'distance_travelled_by_foot', type: 'REAL', description: 'Distance travelled by foot' },
      { name: 'wounds_patched', type: 'INTEGER', description: 'Wounds patched' },
      { name: 'items_picked_up', type: 'INTEGER', description: 'Items picked up' },
      { name: 'liquid_drank', type: 'REAL', description: 'Liquid drank' },
      { name: 'teeth_lost', type: 'INTEGER', description: 'Teeth lost' },
      { name: 'total_calories_intake', type: 'INTEGER', description: 'Total calories intake' },
      { name: 'shots_fired', type: 'INTEGER', description: 'Shots fired' },
      { name: 'shots_hit', type: 'INTEGER', description: 'Shots hit' },
      { name: 'headshots', type: 'INTEGER', description: 'Headshots' },
      { name: 'melee_weapon_swings', type: 'INTEGER', description: 'Melee weapon swings' },
      { name: 'melee_weapon_hits', type: 'INTEGER', description: 'Melee weapon hits' },
      { name: 'melee_weapons_crafted', type: 'INTEGER', description: 'Melee weapons crafted' },
      { name: 'drone_kills', type: 'INTEGER', description: 'Drone kills' },
      { name: 'sentry_kills', type: 'INTEGER', description: 'Sentry kills' },
      { name: 'prisoner_kills', type: 'INTEGER', description: 'Prisoner kills' },
      { name: 'puppets_knocked_out', type: 'INTEGER', description: 'Puppets knocked out' },
      { name: 'diarrheas', type: 'INTEGER', description: 'Diarrheas' },
      { name: 'vomits', type: 'INTEGER', description: 'Vomits' },
      { name: 'distance_travelled_in_vehicle', type: 'REAL', description: 'Distance travelled in vehicle' },
      { name: 'mushrooms_eaten', type: 'INTEGER', description: 'Mushrooms eaten' },
      { name: 'highest_muscle_mass', type: 'REAL', description: 'Highest muscle mass' },
      { name: 'highest_fat', type: 'REAL', description: 'Highest fat' },
      { name: 'heart_attacks', type: 'INTEGER', description: 'Heart attacks' },
      { name: 'overdose', type: 'INTEGER', description: 'Overdose' },
      { name: 'starvation', type: 'INTEGER', description: 'Starvation' },
      { name: 'highest_damage_taken', type: 'REAL', description: 'Highest damage taken' },
      { name: 'highest_weight_carried', type: 'REAL', description: 'Highest weight carried' },
      { name: 'lowest_negative_fame_points', type: 'REAL', description: 'Lowest negative fame points' },
      { name: 'distance_travelled_swimming', type: 'REAL', description: 'Distance travelled swimming' },
      { name: 'crows_killed', type: 'INTEGER', description: 'Crows killed' },
      { name: 'seagulls_killed', type: 'INTEGER', description: 'Seagulls killed' },
      { name: 'horses_killed', type: 'INTEGER', description: 'Horses killed' },
      { name: 'boars_killed', type: 'INTEGER', description: 'Boars killed' },
      { name: 'bears_killed', type: 'INTEGER', description: 'Bears killed' },
      { name: 'goats_killed', type: 'INTEGER', description: 'Goats killed' },
      { name: 'deers_killed', type: 'INTEGER', description: 'Deers killed' },
      { name: 'chickens_killed', type: 'INTEGER', description: 'Chickens killed' },
      { name: 'rabbits_killed', type: 'INTEGER', description: 'Rabbits killed' },
      { name: 'donkeys_killed', type: 'INTEGER', description: 'Donkeys killed' },
      { name: 'times_mauled_by_bear', type: 'INTEGER', description: 'Times mauled by bear' },
      { name: 'longest_animal_kill_distance', type: 'REAL', description: 'Longest animal kill distance' },
      { name: 'alcohol_drank', type: 'INTEGER', description: 'Alcohol drank' },
      { name: 'foliage_cut', type: 'INTEGER', description: 'Foliage cut' },
      { name: 'distance_travel_by_boat', type: 'REAL', description: 'Distance travel by boat' },
      { name: 'distance_sailed', type: 'REAL', description: 'Distance sailed' },
      { name: 'times_caught_by_shark', type: 'INTEGER', description: 'Times caught by shark' },
      { name: 'times_escaped_shark_bite', type: 'INTEGER', description: 'Times escaped shark bite' },
      { name: 'wolves_killed', type: 'INTEGER', description: 'Wolves killed' },
      { name: 'last_fame_point_award_consecutive_days', type: 'INTEGER', description: 'Last fame point award consecutive days' },
      { name: 'firearm_kills', type: 'INTEGER', description: 'Firearm kills' },
      { name: 'bare_handed_kills', type: 'INTEGER', description: 'Bare handed kills' },
    ],
    foreignKeys: [
      { column: 'user_profile_id', references: 'user_profile(id)', onDelete: 'CASCADE' },
    ],
  },
  {
    table: 'fishing_stats',
    description: 'Fishing statistics for each user profile. Linked to user_profile via user_profile_id.',
    keyColumn: 'user_profile_id',
    columns: [
      { name: 'user_profile_id', type: 'INTEGER', description: 'Foreign key to user_profile(id)' },
      { name: 'fish_caught', type: 'INTEGER', description: 'Total fish caught' },
      { name: 'fish_kept', type: 'INTEGER', description: 'Fish kept' },
      { name: 'fish_released', type: 'INTEGER', description: 'Fish released' },
      { name: 'lines_broken', type: 'INTEGER', description: 'Lines broken' },
      { name: 'heaviest_fish_caught', type: 'REAL', description: 'Heaviest fish caught' },
      { name: 'longest_fish_caught', type: 'REAL', description: 'Longest fish caught' },
      { name: 'bass_caught', type: 'INTEGER', description: 'Bass caught' },
      { name: 'catfish_caught', type: 'INTEGER', description: 'Catfish caught' },
      { name: 'pike_caught', type: 'INTEGER', description: 'Pike caught' },
      { name: 'carp_caught', type: 'INTEGER', description: 'Carp caught' },
      { name: 'amur_caught', type: 'INTEGER', description: 'Amur caught' },
      { name: 'bleak_caught', type: 'INTEGER', description: 'Bleak caught' },
      { name: 'chub_caught', type: 'INTEGER', description: 'Chub caught' },
      { name: 'ruffe_caught', type: 'INTEGER', description: 'Ruffe caught' },
      { name: 'prussian_carp_caught', type: 'INTEGER', description: 'Prussian carp caught' },
      { name: 'crucian_carp_caught', type: 'INTEGER', description: 'Crucian carp caught' },
      { name: 'sardine_caught', type: 'INTEGER', description: 'Sardine caught' },
      { name: 'dentex_caught', type: 'INTEGER', description: 'Dentex caught' },
      { name: 'orata_caught', type: 'INTEGER', description: 'Orata caught' },
      { name: 'tuna_caught', type: 'INTEGER', description: 'Tuna caught' },
    ],
    foreignKeys: [
      { column: 'user_profile_id', references: 'user_profile(id)', onDelete: 'CASCADE' },
    ],
  },
];
